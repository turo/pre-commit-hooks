# This is a basic workflow to help you get started with Actions
name: Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "lint"
  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out origin/master repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: ls -rl

      - name: Login to Docker Registry
        run: docker login -u "$DOCKER_USERNAME" --password-stdin <<< "$DOCKER_PASSWORD"
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      # Runs a single command using the runners shell
      - name: debug - list files
        run: docker run -v `pwd`:/package turo/tf-teamcity:1.0.14 ls -rl

      # Runs a single command using the runners shell
      - name: setup
        run: docker run -e CI="true" -e ATLAS_TOKEN="${{ secrets.TERRAFORM_ENTERPRISE_ATLAS_TOKEN }}"  -e TF_CLI_CONFIG_FILE=./.terraformrc -v `pwd`:/package turo/tf-teamcity:1.0.14 ./script/setup

      # Runs a single command using the runners shell
      - name: lint
        run: docker run -e CI="true" -e ATLAS_TOKEN="${{ secrets.TERRAFORM_ENTERPRISE_ATLAS_TOKEN }}"  -e TF_CLI_CONFIG_FILE=./.terraformrc -v `pwd`:/package turo/tf-teamcity:1.0.14 ./script/lint

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: fedora-python/tox-github-action
        with:
          # The tox environment to run
          # Default: py38 (subject to change as new Python releases come out)
          tox_env: py38
